#include <iostream>
#include <string>
using namespace std;
//DEFINING VRIABLES
struct Student {
    string name;
    int rollNo;
    string department;
    float cgpa;
    bool isScholarship;
};
const int HOSTELS = 3;
const int ROOMS = 5;
const int SLOTS = 2;

Student* hostel[HOSTELS][ROOMS][SLOTS] = {nullptr};  

bool isDuplicateRoll(int roll) {
for (int h = 0; h < HOSTELS; h++)
    for (int r = 0; r < ROOMS; r++)
for (int s = 0; s < SLOTS; s++)
if (hostel[h][r][s] != nullptr && hostel[h][r][s]->rollNo == roll)
return true;
return false;
}

bool allocateStudent(Student* s) {
int maxRoom = s->isScholarship ? 3 : ROOMS;  // Room 0 to 2 if scholarship holder

for (int h = 0; h < HOSTELS; h++) {
for (int r = 0; r < maxRoom; r++) {
for (int sIdx = 0; sIdx < SLOTS; sIdx++) {
if (hostel[h][r][sIdx] == nullptr) {
hostel[h][r][sIdx] = s;
cout << "Student allocated to Hostel " << h + 1 << ", Room " << r + 1 << ", Slot " << sIdx + 1 << endl;
return true;
}}
}
}cout << "No space available for allocation.\n";
    return false;
}
void displayAllRooms() {
for (int h = 0; h < HOSTELS; h++) {
cout << "Hostel " << h + 1 << ":\n";
for (int r = 0; r < ROOMS; r++) {
cout << "  Room " << r + 1 << ": ";
bool isEmpty = true;
for (int s = 0; s < SLOTS; s++) {
if (hostel[h][r][s]) {
    cout << "[" << hostel[h][r][s]->name << ", Roll: " << hostel[h][r][s]->rollNo
<< ", CGPA: " << hostel[h][r][s]->cgpa
<< ", Scholarship: " << (hostel[h][r][s]->isScholarship ? "Yes" : "No") << "] ";
isEmpty = false;

}
}
if (isEmpty) cout << "Empty";
cout << endl;
}
    }
}

int main() {
cout<<"......THIS IS HOSTEL MANAGEMENT SYSTEM FOR COMSATS LAHORE......"<<endl;
int n;
cout << "Enter number of students to add: ";
cin >> n;
    for (int i = 0; i < n; i++) {
Student* s = new Student();
cout << "\nEnter details for student " << i + 1 << ":\n";
cout << "Name: "; cin.ignore(); getline(cin, s->name);
cout << "Roll No: "; cin >> s->rollNo;
if (isDuplicateRoll(s->rollNo)) {
cout << "Duplicate Roll Number! Skipping entry.\n";
delete s;
continue;
}
cout << "Department: "; cin.ignore(); getline(cin, s->department);
cout << "CGPA: "; cin >> s->cgpa;
s->isScholarship = (s->cgpa >= 3.5);  // Assume CGPA >= 3.5 gets scholarship
allocateStudent(s);
}

cout << "\nRoom Allocation Summary:\n";
displayAllRooms();

    return 0;}
